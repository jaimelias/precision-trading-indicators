var PrecisionTradingIndicators;(()=>{"use strict";var e={d:(s,t)=>{for(var i in t)e.o(t,i)&&!e.o(s,i)&&Object.defineProperty(s,i,{enumerable:!0,get:t[i]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},s={};(()=>{e.r(s),e.d(s,{default:()=>o});const t=(e,s,t)=>{const i=e(2/(t+1)),r=s.length,n=[];if(i.isGreaterThan(1))return Array(r);if(i.isEqualTo(1))return[...s];let l=0,o=0;for(;o<r;o++){const e=s[o];if("object"==typeof e){n[o]=e,l=e,o++;break}}if(Array.isArray(i))for(;o<r;o++){const e=s[o];"object"==typeof e&&"object"==typeof i[o]?l=n[o]=i[o].multipliedBy(e).plus(i[o].minus(1).multipliedBy(l)):n[o]=n[o-1]}else{const t=e(1).minus(i);for(;o<r;o++){const e=s[o];l="object"==typeof e?i.multipliedBy(e).plus(t.multipliedBy(l)):n[o-1],n[o]=l}}return n},i=(e,s,t)=>{const i=s.length,r=s.map((s=>e(s)));if(!t)return r.reduce(((e,s)=>e.plus(s))).dividedBy(i);if(t<=1)return r.slice();if(t>i)return Array(i);const n=[];let l=e(0);for(let e=0;e<i;e++){const s=r[e];if("object"==typeof s&&(l=l.plus(s)),e>=t){const s=r[e-t];"object"==typeof s&&(l=l.minus(s))}e>=t-1&&(n[e]=l.dividedBy(t))}return n},r=(e,s,t,i)=>{const r=Array.isArray(e),n=Array.isArray(s);if(r&&n&&e.length!==s.length)throw new Error("Array lengths must be the same");!r&&n&&(e=Array(s.length).fill(e)),r&&!n&&(s=Array(e.length).fill(s)),r||n||(e=[e],s=[s]);const l=[];for(let r=0;r<e.length;r++){let n;switch(t){case"add":n=i(e[r]).plus(s[r]);break;case"mul":n=i(e[r]).times(s[r]);break;case"sub":n=i(e[r]).minus(s[r]);break;case"div":n=i(e[r]).dividedBy(s[r]);break;default:throw new Error("Invalid operation")}l.push(n)}return l},n=({fast:e,slow:s})=>{const t=e.length;let i=null,r=null,n=t-1;for(;n>=0&&null===i;)e[n].isLessThan(s[n])&&n>0&&e[n-1].isGreaterThanOrEqualTo(s[n-1])?(i="down",r=n):e[n].isGreaterThan(s[n])&&n>0&&e[n-1].isLessThanOrEqualTo(s[n-1])&&(i="up",r=n),n--;return null===i?{crossInterval:null,crossType:null}:{crossInterval:r<t-1?t-1-r:0,crossType:i}},l=(e,s)=>{let{upper:t,lower:i,mid:r}=s;t=t[t.length-1],i=i[i.length-1],r=r[r.length-1];const n=t.minus(i);return e.minus(i).dividedBy(n).times(100)};class o{constructor(e){this.BigNumber=e,this.EMA=this.EMA.bind(this),this.MA=this.MA.bind(this),this.MACD=this.MACD.bind(this),this.BOLLINGER_BANDS=this.BOLLINGER_BANDS.bind(this),this.ADX=this.ADX.bind(this),this.MFI=this.MFI.bind(this),this.RSI=this.RSI.bind(this),this.STOCHASTIC_RSI=this.STOCHASTIC_RSI.bind(this),this.bollingerBandsLocation=this.bollingerBandsLocation.bind(this),this.getTrend=this.getTrend.bind(this),this.findLastCross=this.findLastCross.bind(this),this.getMomentum=this.getMomentum.bind(this)}EMA(e,s){return t(this.BigNumber,e,s)}MA(e,s){return i(this.BigNumber,e,s)}MACD(e,s,i,l){return((e,s,i=12,l=26,o=9)=>{const u=t(e,s,i),h=t(e,s,l),a=r(u,h,"sub",e),d=t(e,a,o),c=r(e(2),r(a,d,"sub",e),"mul",e),{crossType:p,crossInterval:g}=n({fast:a,slow:d});return{diff:a,dea:d,histogram:c,crossType:p,crossInterval:g}})(this.BigNumber,e,s,i,l)}BOLLINGER_BANDS(e,s,t){return((e,s,t=20,n=2)=>{n=e(n);const o=i(e,s,t),u=((e,s,t)=>{const r=e(0),n=s.length,l=i(e,s,t),o=[];let u,h,a=t-1;for(;a<n;a++){for(h=r,u=a-t+1;u<=a;u++)h=h.plus(s[u].minus(l[a]).pow(2));o[a]=h.dividedBy(t).sqrt()}return o})(e,s,t),h=r(u,n,"mul",e);let a=r(o,h,"add",e),d=o,c=r(o,h,"sub",e);const p=s[s.length-1];return{upper:a,mid:d,lower:c,loc:l(p,{upper:a,mid:d,lower:c})}})(this.BigNumber,e,s,t)}ADX(e,s){return((e,s,t=14)=>{let{high:i,low:r,close:n}=s;const l=e(0),o=e(100),u=e=>e.reduce(((e,s)=>e.plus(s)),l),h=[],a=[],d=[],c=[],p=[],g=[],f=[],m=[];let T=[];const B=[];for(let s=1;s<i.length;s++){const t=i[s].minus(i[s-1]),o=r[s-1].minus(r[s]),u=t.isGreaterThan(o)&&t.isGreaterThan(0)?t:l,c=o.isGreaterThan(t)&&o.isGreaterThan(0)?o:l,p=e.max(i[s].minus(r[s]),i[s].minus(n[s-1]).abs(),r[s].minus(n[s-1]).abs());h.push(u),a.push(c),d.push(p)}const y=u(h.slice(0,t)).dividedBy(t),b=u(a.slice(0,t)).dividedBy(t),v=u(d.slice(0,t)).dividedBy(t);c.push(y),p.push(b),g.push(v);for(let e=t;e<i.length;e++){const s=c[e-t].times(t-1).plus(h[e]).dividedBy(t),i=p[e-t].times(t-1).plus(a[e]).dividedBy(t),r=g[e-t].times(t-1).plus(d[e]).dividedBy(t);c.push(s),p.push(i),g.push(r)}for(let e=0;e<c.length;e++){const s=o.times(c[e].dividedBy(g[e])),t=o.times(p[e].dividedBy(g[e]));f.push(s),m.push(t)}for(let e=t;e<c.length;e++){const s=f.slice(e-t+1,e+1).reduce(((e,s)=>e.plus(s))),i=m.slice(e-t+1,e+1).reduce(((e,s)=>e.plus(s))),r=o.times(s.minus(i).abs().div(s.plus(i)));T.push(r)}T.length>=2*t-1&&(T=T.filter((e=>!isNaN(e))));const w=T.slice(0,t).reduce(((e,s)=>e.plus(s))).div(t);B.push(w);for(let e=t;e<T.length;e++){const s=B[e-t].times(t-1).plus(T[e]).div(t);B.push(s)}return B})(this.BigNumber,e,s)}MFI(e,s){return((e,s,t=14)=>{const{high:i,low:r,close:n,volume:l}=s,o=e(0),u=e(100),h=e(1),a=[],d=[],c=[],p=[],g=[],f=[];for(let e=0;e<n.length;e++){const s=i[e].plus(r[e]).plus(n[e]).dividedBy(3),t=s.times(l[e]);a.push(s),d.push(t)}for(let e=1;e<a.length;e++)a[e].isGreaterThan(a[e-1])?(c.push(d[e]),p.push(o)):a[e].isLessThan(a[e-1])?(c.push(o),p.push(d[e])):(c.push(o),p.push(o));for(let e=t;e<=c.length;e++){const s=c.slice(e-t,e),i=p.slice(e-t,e),r=s.reduce(((e,s)=>e.plus(s)),o),n=i.reduce(((e,s)=>e.plus(s)),o),l=r.dividedBy(n);g.push(l)}for(let e=0;e<g.length;e++){const s=u.minus(u.dividedBy(h.plus(g[e])));f.push(s)}return f})(this.BigNumber,e,s)}RSI(e,s){return((e,s,t=14)=>{if(s.length<t)return[];let i=[],r=s.slice(0,t);const n=e(0),l=e(100),o=e(1);for(let u=t,h=n,a=n;u<s.length;u++,h=n,a=n){r.push(s[u]);for(let s=1;s<r.length;s++){const t=e(r[s]),i=e(r[s-1]);t.minus(i).isLessThan(n)?a=a.plus(t.minus(i).abs()):h=h.plus(t.minus(i))}const d=h.dividedBy(t),c=a.dividedBy(t),p=c.isEqualTo(n)?n:d.dividedBy(c),g=l.minus(l.dividedBy(o.plus(p)));i.push(g),r.splice(0,1)}return i})(this.BigNumber,e,s)}STOCHASTIC_RSI(e,s,i,r){return((e,s,i=14,r=3,l=3)=>{if(s.length<i)return[];const o=e.max(i,r,l),u=[];for(let t=o.toNumber();t<s.length;t++){const i=s.slice(t-o.toNumber(),t+1),r=e.min(...i),n=e.max(...i),l=s[t].minus(r).dividedBy(n.minus(r)).times(100);u.push(l)}const h=t(e,u,r),a=t(e,h,l),{crossType:d,crossInterval:c}=n({fast:a,slow:h});return{K:h,D:a,crossType:d,crossInterval:c}})(this.BigNumber,e,s,i,r)}bollingerBandsLocation(e,s){return l(e,s)}getTrend(e,s){return((e,s,t=24)=>{const i=s.length,r=Math.max(0,i-t),n=i-1;let l="";const o=e(0),u=e(.5),h=new Array(n-r);for(let e=r;e<n;e++)h[e-r]=s[e+1].minus(s[e]);const a=h.reduce(((e,s)=>e.plus(s)),o).dividedBy(h.length),d=h.reduce(((e,s)=>e.plus(s.minus(a).pow(2))),o).dividedBy(h.length-1).sqrt();return l=a.isGreaterThan(o)&&d.isGreaterThan(u.times(a))?"up":a.isLessThan(o)&&d.isGreaterThan(u.times(a.abs()))?"down":"neutral",l})(this.BigNumber,e,s)}findLastCross({fast:e,slow:s}){return n({fast:e,slow:s})}getMomentum({data:e,fast:s,slow:t,threshold:i}){return(({data:e,fast:s,slow:t,threshold:i=.02})=>{const r=e[e.length-1].minus(s[s.length-1]),n=s[s.length-1].minus(t[t.length-1]),l=s[s.length-1];if(r.isGreaterThan(0)&&n.isGreaterThan(0)){const e=r.dividedBy(l),s=n.dividedBy(l);return e.isGreaterThan(i)&&s.isGreaterThan(i)?"strong up":"up"}if(r.isLessThan(0)&&n.isLessThan(0)){const e=r.abs().dividedBy(l),s=n.abs().dividedBy(l);return e.isGreaterThan(i)&&s.isGreaterThan(i)?"strong down":"down"}return"neutral"})({data:e,fast:s,slow:t,threshold:i})}getCandlestickPattern(e){return(e=>{const{open:s,high:t,low:i,close:r}=e,n=[{open:s[s.length-2],high:t[t.length-2],low:i[i.length-2],close:r[r.length-2]},{open:s[s.length-1],high:t[t.length-1],low:i[i.length-1],close:r[r.length-1]}],[l,o]=n.slice(-2),u=o.close.isGreaterThan(o.open),h=o.open.isGreaterThan(o.close);if(u){if(o.low.isLessThan(l.low)&&o.high.isGreaterThan(l.high))return"Bullish: Engulfing";if(o.close.isGreaterThan(l.close)){if(o.open.isLessThan(l.open))return"Bullish: Piercing Line";if(o.open.isEqualTo(l.open))return"Bullish: Morning Star"}if(o.close.isEqualTo(l.open)){if(o.open.isGreaterThan(l.close))return"Bullish: Harami";if(o.open.isEqualTo(l.close))return"Bullish: Doji"}if(o.close.isGreaterThan(l.close))return"Bullish: Marubozu";if(o.open.isGreaterThan(l.open))return"Bullish: Belt Hold";if(o.open.isLessThan(l.open)&&o.close.isLessThan(l.close))return"Bullish: Kicker"}if(h){if(o.high.isGreaterThan(l.high)&&o.low.isLessThan(l.low))return"Bearish: Engulfing";if(o.close.isLessThan(l.close)){if(o.open.isGreaterThan(l.open))return"Bearish: Dark Cloud Cover";if(o.open.isEqualTo(l.open))return"Bearish: Evening Star"}if(o.close.isEqualTo(l.open)){if(o.open.isLessThan(l.close))return"Bearish: Harami";if(o.open.isEqualTo(l.close))return"Bearish: Doji"}if(o.close.isLessThan(l.close))return"Bearish: Marubozu";if(o.open.isLessThan(l.open))return"Bearish: Belt Hold";if(o.open.isGreaterThan(l.open)&&o.close.isGreaterThan(l.close))return"Bearish: Kicker"}return"Unknown"})(e)}}})(),PrecisionTradingIndicators=s})();